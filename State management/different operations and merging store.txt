//alada kono operation

const counterModule = {
  state() {
    return {
      counter: 0
    };
  },
  mutations: {
    increment(state, payload) {
      state.counter = state.counter + payload.value;
    }
  },
  actions: {
    //lekhar system
    increment(context, payload) {
      //method name + context(targetted method) + payload
      setTimeout(() => {
        context.commit('increment', payload); //targetted method commit
      }, 2000);
    }
  },
  getters: {
    finalCounter(state) {
      return state.counter * 2;
    },
    doubleFinalCounter(state, getters) {
      return state.counter + getters.finalCounter;
    },
    counter(state) {
      return state.counter;
    }
  }
};

const store = createStore({
  modules: {
    numbers: counterModule //merging
  },
  state() {
    return {
      isLoggedIn: false
    };
  },
  mutations: {
    log(state, payload) {
      state.isLoggedIn = payload.value;
    }
  },
  getters: {},
  actions: {}
});