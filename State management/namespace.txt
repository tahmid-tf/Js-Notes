// alada object with set to namespace to true,

const counterModule = {
  namespaced: true, //namespace
  state() {
    return {
      counter: 0
    };
  },
  mutations: {
    increment(state, payload) {
      state.counter = state.counter + payload.value;
    }
  },
  actions: {
    //lekhar system
    increment(context, payload) {
      //method name + context(targetted method) + payload
      setTimeout(() => {
        context.commit('increment', payload); //targetted method commit
      }, 2000);
    }
  },
  getters: {
    finalCounter(state) {
      return state.counter * 2;
    },
    doubleFinalCounter(state, getters) {
      return state.counter + getters.finalCounter;
    },
    counter(state) {
      return state.counter;
    }
  }
};


//adding namespace to store

const store = createStore({
  modules: {
    numbers: counterModule  //number(namespace) & counterModule(object)
  },
  state() {
    return {
      isLoggedIn: false
    };
  },
  mutations: {
    log(state, payload) {
      state.isLoggedIn = payload.value;
    }
  },
  getters: {},
  actions: {}
});

//accessing with ...map functions,

//type 1

  computed: {
    ...mapGetters('numbers', ['doubleFinalCounter'])

    // counter() {
    //   return this.$store.getters.doubleFinalCounter; //point it like a property
    // }
  },

//type 2

{{ $store.getters['numbers/counter'] }}



//mutation with name,

methods: {
    addOne() {
      this.$store.commit('numbers/increment', { value: 3 });
    }
  }